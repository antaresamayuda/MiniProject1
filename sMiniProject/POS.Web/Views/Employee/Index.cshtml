@model POS.ViewModel.MstEmployeeViewModel

@{
    ViewBag.Title = "Tambah Employee";
}



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="box box-warning roleshow" id="FormAdd">
        <div class="box-header with-border">
            <h3 class="box-title">@ViewBag.Title</h3>
            <div class="box-tools pull-right">
                <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip" title="Collapse">
                    <i class="fa fa-minus"></i>
                </button>
                <button type="button" class="btn btn-box-tool" data-widget="remove" data-toggle="tooltip" title="Remove">
                    <i class="fa fa-times"></i>
                </button>
            </div>
        </div>
        <div class="box-body">
            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="col-md-12">
                    <div class="col-md-3">
                        <div class="form-group" id="fn">
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.firstName, new { htmlAttributes = new { placeholder = "Nama Depan", @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.firstName, "", new { @class = "text-danger" })
                                @Html.ValidationSummary("", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="col-md-3">
                        <div class="form-group" id="ln">
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.lastName, new { htmlAttributes = new { @class = "form-control", placeholder = "Nama Belakang" } })
                                @Html.ValidationMessageFor(model => model.lastName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="col-md-3">
                        <div class="form-group" id="em">
                            <div class="col-md-12">
                                 @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control", placeholder = "Email" } })
                                 @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="col-md-3">
                        <div class="form-group">
                            <div class="col-md-12">
                                @{
                                List<SelectListItem> listItems = new List<SelectListItem>();
                                listItems.Add(new SelectListItem
                                     {
                                         Text = "Mr.",
                                         Value = "Mr."
                                     });
                                listItems.Add(new SelectListItem
                                     {
                                         Text = "Ms.",
                                         Value = "Ms.",
                                         Selected = true
                                     });
                                }
                                @Html.DropDownListFor(model => model.title, (IEnumerable<SelectListItem>)listItems, "--Select Title--", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.title, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-md-12">
                    <div class="col-md-3">
                        <button type="button" class="btn btn-primary btn-outlet">Assign Outlet</button>
                    </div>

                    <div class="col-md-3">
                        <div class="form-group">
                            <div class="col-md-6">
                                Create Account?
                            </div>
                            <div class="col-md-6 checkbox icheck">
                                @Html.EditorFor(model => model.haveAccount, new { @class = "flat-red", type = "chekbox" })
                                @Html.ValidationMessageFor(model => model.haveAccount, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3" id="RDoutlet">
                        <table>
                            <tbody id="RDoutlet"></tbody>
                        </table>
                    </div>
                </div>
                <p>&nbsp;</p>
                <hr />
                <div>
                    <div class="col-md-12">
                        <div class="col-md-9">
                            <div id="roleUser" hidden>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <div class="col-md-10 dropdown">
                                            @Html.DropDownListFor(model => model.roleId, (IEnumerable<SelectListItem>)ViewBag.ListRole, new { @class = "form-control", value = "0" })
                                            @Html.ValidationMessageFor(model => model.roleId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>

                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.username, new { htmlAttributes = new { @class = "form-control", placeholder = "Username" } })

                                </div>

                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control", placeholder = "Password" } })

                                </div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group pull-right">
                                <button type="button" id="btn-clear" class="btn btn-clear"><span class="fa fa-trash-o"></span> Clear</button>
                                <button type="submit" class="btn btn-google" ><span class="fa fa-save"></span> Save</button>

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
}

<div class="box box-primary">
    <div class="box-header with-border">
        <h3 class="box-title">Data Employee</h3>
        <div class="box-tools pull-right">
            <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip" title="Collapse">
                <i class="fa fa-minus"></i>
            </button>
            <button type="button" class="btn btn-box-tool" data-widget="remove" data-toggle="tooltip" title="Remove">
                <i class="fa fa-times"></i>
            </button>
        </div>
    </div>
    <div class="box-body">
        <div class="col-md-4 pull-right">
            @*<div class="form-group has-feedback">
                <input id="search" type="text" class="form-control" placeholder="Search.." />
                <span class="glyphicon glyphicon-search form-control-feedback"></span>
            </div>*@
        </div>
        <div class="col-md-12">
            <table class="table table-bordered table-striped text-center">
                <thead class="bg-gray">
                    <tr>
                        <th>Name</th>
                        <th>Email</th>
                        <th>Have Account ?</th>
                        <th>Outlet Access</th>
                        <th>Role</th>
                        <th colspan="2" class="roleshow">Act</th>
                    </tr>
                </thead>

                <tbody id="listEmployee"></tbody>

            </table>
            <div id="OutletNames"></div>
        </div>
    </div>
</div>

    <div id="myModal" class="modal fade" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header bg-gray-light">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Select Outlet Access</h4>
                </div>
                <div class="modal-body padding20">
                    <div class="col-md-6">
                        <div class="form-group has-feedback">
                            <input type="text" class="form-control" placeholder="Search.." id="searchs" onfocus="true" />
                            <span class="glyphicon glyphicon-search form-control-feedback"></span>
                        </div>
                        <div id="isi-data">

                        </div>
                    </div>
                    <p>&nbsp;</p>
                </div>
                <div class="modal-footer bg-gray-light">
                    <button type="button" class="btn btn-twitter" data-dismiss="modal">Select</button>
                </div>
            </div>
        </div>
    </div>

<div id="ModalEdit" class="modal fade" role="dialog">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-purple">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Update Data Employee</h4>
            </div>
            <div class="modal-body masuk padding20">

            </div>
        </div>
    </div>
</div>

<div id="ModalAktifkan" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-maroon">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Are you sure you want to active this?</h4>
            </div>
            <div class="modal-body aktifkan padding20">

            </div>
        </div>
    </div>
</div>

<div id="ModalNonAct" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-black">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Are you sure you want to deactive this?</h4>
            </div>
            <div class="modal-body nonact padding20">

            </div>
        </div>
    </div>
</div>



    <script>

        function validateSave() {
            if ($("#firstName").val() == "") {
                alert("Nama Depan Kosong");
                $("#firstName").focus();
                $("#fn").addClass("has-error");
                $("#ln").removeClass("has-error");
                $("#em").removeClass("has-error");
                return false;
            }
            $("#fn").addClass("has-success");
            if ($("#lastName").val() == "") {
                alert("Nama Belakang Kosong");
                $("#lastName").focus();
                $("#ln").addClass("has-error");
                $("#fn").removeClass("has-error");
                $("#em").removeClass("has-error");
                return false;
            }
            $("#ln").addClass("has-success");
            if ($("#email").val() == "") {
                alert("Email Kosong");
                $("#email").focus();
                $("#fn").removeClass("has-error");
                $("#ln").removeClass("has-error");
                $("#em").addClass("has-error");
                return false;
            }

             
            var x = $("#email").val();
            var s = '@Session["at"]';
            var atpos = x.indexOf(s);
            var dotpos = x.lastIndexOf(".");
            if (atpos < 1 || dotpos < atpos + 1 || dotpos + 1 >= x.length) {
                $("#em").addClass("has-error");
                return false;
            }
            else {
                $("#em").removeClass("has-error");
                $("#em").addClass("has-success");

            }

        }


    $("#haveAccount").on("change", function (e) {
        if (e.target.checked) {
            document.getElementById('roleUser').hidden = false;
        }
        else {
            document.getElementById('roleUser').hidden = true;
        }
    });

    $(document).ready(function () {
        $.ajax({
            url: '@Url.Action("List","Employee")',
            type: 'get',
            success: function (result) {
                $("#listEmployee").append(result);
            }
        });

        if ('@Session["RoleID"]' == "1") {
            //alert("woy");
            $(".roleshow").show();
        }
        else {
            $(".roleshow").hide();
        }

    });


    var item1 = "";
    $("#btn-clear").click(function () {

        $("#firstName").val("");
        $("#lastName").val("");
        $("#email").val("");
        $("#title").val("");
        $("#UserRole").val("");
        $("#username").val("");
        $("#password").val("");
    });



    $(".btn-outlet").click(function () {
        //alert("asd");
        //$("#myModal").modal("show");
        $.ajax({
            url: '@Url.Action("DataOutlet","Outlet")',
            Type: 'get',
            success: function (result) {
                //$(".modal-body").html(result);
                $("#myModal").modal("show");
            }
        });
    });

    $(".modal-body").on("change", ".cek-outlet", function (e) {
        e.preventDefault();
        var vId = $(this).attr("data-id");
        if (e.target.checked) {
            $.ajax({
                url: '@Url.Action("GetOutletById", "Ajax")',
                data: { id: vId },
                type: 'get',
                success: function (result) {
                    $("#RDoutlet").append(result);
                }
            });
        }
        else {
            $("#RD-" + vId).remove();
        }
    });


        $(".masuk").on("change", ".cek-outlet", function (e) {
            e.preventDefault();
            var vId = $(this).attr("data-id");
            if (e.target.checked) {
                $.ajax({
                    url: '@Url.Action("GetOutletById", "Ajax")',
                    data: { id: vId },
                    type: 'get',
                    success: function (result) {
                        $("#OutletAccess").append(result);
                    }
                });
            }
            else {
                $("#RD-" + vId).remove();
            }
        });


    $(".modal-body").on("keyup", "#searchs", function () {
        SearchItems();
    });


    function SearchItems() {
        var key = $("#searchs").val();
        $("#isi-data").remove();
        $(".modal-body").append('<x id="isi-data"></x>');
        //var key = "";
        $.ajax({
            url: '@Url.Action("Search", "Outlet")',
                data: { searchText: key },
                type: 'get',
                success: function (result) {
                    $("#isi-data").append(result);
                }
            });
    }


    </script>
